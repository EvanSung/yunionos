#!/bin/sh
# vi: ts=4 noexpandtab
# load modules

is_loaded() {
    lsmod | grep -w "$1" > /dev/null
}

do_load() {
    MOD=$1
    if ! is_loaded $MOD; then
        echo "Load $MOD ..."
        local CONF="/etc/modprobe.d/${MOD}.conf"
        local OPTION=""
        if [ -f $CONF ]; then
            OPTION=$(cat $CONF | grep -v ^# | head -n 1)
        fi
        modprobe $MOD $OPTION
    fi
}

try_load_module() {
    local MOD=$1
    local ALIAS_CNT=$(modinfo $MOD | grep "^alias:" | wc -l)
    # echo -n "Try $MOD ... "
    if [ "$ALIAS_CNT" -eq "0" ]; then # not a device driver, load anyway
        do_load $MOD
        return
    fi
    NEED_LOAD=
    for ALIAS in $(modinfo $MOD | grep "^alias:" | awk '{print $2}')
    do
        case "$ALIAS" in
            pci*)
                break
                ;;
            usb*)
                break
                ;;
            *)
                NEED_LOAD="1"
                break
                ;;
        esac
    done
    if [ -n "$NEED_LOAD" ]; then # other bus than pci and usb, load anyway
        do_load $MOD
        return
    fi
    # echo "skip"
    return
}

is_module_match() {
    ALIAS=$1
    MLEN=$2
    MOD=$3
    for a in $(modinfo $MOD | grep "^alias:" | awk '{print $2}')
    do
        a=${a%%\**}
        if [ -n "$MLEN" ]; then
            a=${a:0:$MLEN}
        fi
        if [ "${ALIAS:0:${#a}}" == "$a" ]; then
            echo ${#a}
        fi
    done
    echo ""
}

find_match_module() {
  SUBSYS=$1
  ALIAS=$2
  MLEN=$3
  local MATCH=
  # echo "Find match module for $SUBSYS $ALIAS"
  for a in $(grep "^alias $SUBSYS:" /lib/modules/`uname -r`/modules.alias)
  do
    if [ -n "$MATCH" ]; then
      do_load $a
	  echo $MATCH $a
      MATCH=
	elif [ "${a:0:${#SUBSYS}}" == "$SUBSYS" ]; then
      a=${a%%\**}
      if [ -n "$MLEN" ]; then
        a=${a:0:$MLEN}
      fi
      if [ ${#a} -gt 17 ] && [ "${ALIAS:0:${#a}}" == "$a" ]; then
        MATCH=$a
        # echo ${#a} $a
      fi
    fi
  done
}

load_match_module() {
    local SUBSYS=$1
    local ALIAS=$2
    local MLEN=$3
    local MATCH_LEN=
    local MATCH_MOD=
    while read line; do
        line="${line%%#*}"
        [ -n "$line" ] || continue
        if grep "$line" $LOADFILE > /dev/null; then
            continue
        fi
        if [ -z "$MLEN" ]; then
            EMLEN=${#ALIAS}
        else
            EMLEN=$(($MLEN+${#SUBSYS}+1))
        fi
        EMLEN=$(is_module_match $ALIAS $EMLEN $line)
        if [ -n "$EMLEN" ]; then
            if [ -z "$MATCH_LEN" ] || [ "$MATCH_LEN" -lt "$EMLEN" ]; then
                MATCH_LEN="$EMLEN"
                MATCH_MOD="$line"
                # echo "Find match driver $MATCH_MOD $MATCH_LEN"
            fi
        fi
    done < /etc/modules
    if [ -n "$MATCH_MOD" ]; then
        do_load "$MATCH_MOD"
    fi
}

load_drivers() {
    local SUBSYS=$1
    local MLEN=$2
    # echo "Load $SUBSYS modules with match len $MLEN ..."
    local TMP=/tmp/devices
    echo -n "" >  $TMP
    local DEVICES=/sys/bus/$SUBSYS/devices
    for i in $(ls $DEVICES)
    do
        local ALIAS_FILE="$DEVICES/$i/modalias"
        local DRIVER_PATH="$DEVICES/$i/driver"
        if [ -f "$ALIAS_FILE" ] && [ ! -L "$DRIVER_PATH" ]; then
            cat $ALIAS_FILE >> $TMP
        fi
    done
    for i in $(cat $TMP | sort | uniq)
    do
        # load_match_module $SUBSYS $i $MLEN
        find_match_module $SUBSYS $i $MLEN
    done
}

load_pci_drivers() {
    load_drivers pci
    load_drivers pci 21
    load_drivers pci 20
}

load_usb_drivers() {
    load_drivers usb
    load_drivers usb 21
    load_drivers usb 20
}

case "$1" in
    start)
        if [ -f /etc/modules ]; then
            [ -d "/lib/modules/$(uname -r)" ] || exit 0
            while read line; do
                line="${line%%#*}"
                [ -n "$line" ] || continue
                try_load_module $line
            done < /etc/modules
            load_pci_drivers
            load_usb_drivers
        fi
        ;;
    stop|restart|reload)
        ;;
    *)
        echo "Usage: $0 {start}"
        exit 1
esac


exit $?
